/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ERC20TD, ERC20TDInterface } from "../../contracts/ERC20TD";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DenyTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DenyTransferFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teacherAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTeacher",
        type: "bool",
      },
    ],
    name: "setTeacher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "teachers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611d0e380380611d0e833981810160405281019061003291906103e6565b828281600390816100439190610688565b5080600490816100539190610688565b50505061006633826100c660201b60201c565b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050610864565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012c906107b7565b60405180910390fd5b6101476000838361023160201b60201c565b80600260008282546101599190610806565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ae9190610806565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102139190610849565b60405180910390a361022d6000838361023660201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102a282610259565b810181811067ffffffffffffffff821117156102c1576102c061026a565b5b80604052505050565b60006102d461023b565b90506102e08282610299565b919050565b600067ffffffffffffffff821115610300576102ff61026a565b5b61030982610259565b9050602081019050919050565b60005b83811015610334578082015181840152602081019050610319565b60008484015250505050565b600061035361034e846102e5565b6102ca565b90508281526020810184848401111561036f5761036e610254565b5b61037a848285610316565b509392505050565b600082601f8301126103975761039661024f565b5b81516103a7848260208601610340565b91505092915050565b6000819050919050565b6103c3816103b0565b81146103ce57600080fd5b50565b6000815190506103e0816103ba565b92915050565b6000806000606084860312156103ff576103fe610245565b5b600084015167ffffffffffffffff81111561041d5761041c61024a565b5b61042986828701610382565b935050602084015167ffffffffffffffff81111561044a5761044961024a565b5b61045686828701610382565b9250506040610467868287016103d1565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104c357607f821691505b6020821081036104d6576104d561047c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261053e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610501565b6105488683610501565b95508019841693508086168417925050509392505050565b6000819050919050565b600061058561058061057b846103b0565b610560565b6103b0565b9050919050565b6000819050919050565b61059f8361056a565b6105b36105ab8261058c565b84845461050e565b825550505050565b600090565b6105c86105bb565b6105d3818484610596565b505050565b5b818110156105f7576105ec6000826105c0565b6001810190506105d9565b5050565b601f82111561063c5761060d816104dc565b610616846104f1565b81016020851015610625578190505b610639610631856104f1565b8301826105d8565b50505b505050565b600082821c905092915050565b600061065f60001984600802610641565b1980831691505092915050565b6000610678838361064e565b9150826002028217905092915050565b61069182610471565b67ffffffffffffffff8111156106aa576106a961026a565b5b6106b482546104ab565b6106bf8282856105fb565b600060209050601f8311600181146106f257600084156106e0578287015190505b6106ea858261066c565b865550610752565b601f198416610700866104dc565b60005b8281101561072857848901518255600182019150602085019450602081019050610703565b868310156107455784890151610741601f89168261064e565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006107a1601f8361075a565b91506107ac8261076b565b602082019050919050565b600060208201905081810360008301526107d081610794565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610811826103b0565b915061081c836103b0565b9250828201905080821115610834576108336107d7565b5b92915050565b610843816103b0565b82525050565b600060208201905061085e600083018461083a565b92915050565b61149b806108736000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d71461025f578063a9059cbb1461028f578063dd62ed3e146102bf578063f0a47f78146102ef576100ea565b806339509351146101e157806370a082311461021157806395d89b4114610241576100ea565b8063158a4988116100c8578063158a49881461015957806318160ddd1461017557806323b872dd14610193578063313ce567146101c3576100ea565b8063059e7d43146100ef57806306fdde031461010b578063095ea7b314610129575b600080fd5b61010960048036038101906101049190610c9e565b61031f565b005b6101136103d0565b6040516101209190610d6e565b60405180910390f35b610143600480360381019061013e9190610dc6565b610462565b6040516101509190610e15565b60405180910390f35b610173600480360381019061016e9190610dc6565b610480565b005b61017d610511565b60405161018a9190610e3f565b60405180910390f35b6101ad60048036038101906101a89190610e5a565b61051b565b6040516101ba9190610e15565b60405180910390f35b6101cb610563565b6040516101d89190610ec9565b60405180910390f35b6101fb60048036038101906101f69190610dc6565b61056c565b6040516102089190610e15565b60405180910390f35b61022b60048036038101906102269190610ee4565b610618565b6040516102389190610e3f565b60405180910390f35b610249610660565b6040516102569190610d6e565b60405180910390f35b61027960048036038101906102749190610dc6565b6106f2565b6040516102869190610e15565b60405180910390f35b6102a960048036038101906102a49190610dc6565b6107dd565b6040516102b69190610e15565b60405180910390f35b6102d960048036038101906102d49190610f11565b610822565b6040516102e69190610e3f565b60405180910390f35b61030960048036038101906103049190610ee4565b6108a9565b6040516103169190610e15565b60405180910390f35b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661037557600080fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600380546103df90610f80565b80601f016020809104026020016040519081016040528092919081815260200182805461040b90610f80565b80156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b5050505050905090565b600061047661046f6108c9565b84846108d1565b6001905092915050565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104d657600080fd5b60006104e0610563565b60ff169050600081600a6104f49190611113565b905061050b848285610506919061115e565b610a9a565b50505050565b6000600254905090565b60007fd0694e7d49b27f4b4a961ce3805328af4167444e06ff16117cdd1a58ac82a076848484604051610550939291906111af565b60405180910390a1600090509392505050565b60006012905090565b600061060e6105796108c9565b8484600160006105876108c9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461060991906111e6565b6108d1565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461066f90610f80565b80601f016020809104026020016040519081016040528092919081815260200182805461069b90610f80565b80156106e85780601f106106bd576101008083540402835291602001916106e8565b820191906000526020600020905b8154815290600101906020018083116106cb57829003601f168201915b5050505050905090565b600080600160006107016108c9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b59061128c565b60405180910390fd5b6107d26107c96108c9565b858584036108d1565b600191505092915050565b60007fc6b2ad30756dffa7b99169519666c366309cf8ad0d54999b1b472775854fc8da83836040516108109291906112ac565b60405180910390a16000905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790611347565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a6906113d9565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a8d9190610e3f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0090611445565b60405180910390fd5b610b1560008383610bf9565b8060026000828254610b2791906111e6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b7c91906111e6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610be19190610e3f565b60405180910390a3610bf560008383610bfe565b5050565b505050565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3382610c08565b9050919050565b610c4381610c28565b8114610c4e57600080fd5b50565b600081359050610c6081610c3a565b92915050565b60008115159050919050565b610c7b81610c66565b8114610c8657600080fd5b50565b600081359050610c9881610c72565b92915050565b60008060408385031215610cb557610cb4610c03565b5b6000610cc385828601610c51565b9250506020610cd485828601610c89565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d18578082015181840152602081019050610cfd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d4082610cde565b610d4a8185610ce9565b9350610d5a818560208601610cfa565b610d6381610d24565b840191505092915050565b60006020820190508181036000830152610d888184610d35565b905092915050565b6000819050919050565b610da381610d90565b8114610dae57600080fd5b50565b600081359050610dc081610d9a565b92915050565b60008060408385031215610ddd57610ddc610c03565b5b6000610deb85828601610c51565b9250506020610dfc85828601610db1565b9150509250929050565b610e0f81610c66565b82525050565b6000602082019050610e2a6000830184610e06565b92915050565b610e3981610d90565b82525050565b6000602082019050610e546000830184610e30565b92915050565b600080600060608486031215610e7357610e72610c03565b5b6000610e8186828701610c51565b9350506020610e9286828701610c51565b9250506040610ea386828701610db1565b9150509250925092565b600060ff82169050919050565b610ec381610ead565b82525050565b6000602082019050610ede6000830184610eba565b92915050565b600060208284031215610efa57610ef9610c03565b5b6000610f0884828501610c51565b91505092915050565b60008060408385031215610f2857610f27610c03565b5b6000610f3685828601610c51565b9250506020610f4785828601610c51565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f9857607f821691505b602082108103610fab57610faa610f51565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156110375780860481111561101357611012610fb1565b5b60018516156110225780820291505b808102905061103085610fe0565b9450610ff7565b94509492505050565b600082611050576001905061110c565b8161105e576000905061110c565b8160018114611074576002811461107e576110ad565b600191505061110c565b60ff8411156110905761108f610fb1565b5b8360020a9150848211156110a7576110a6610fb1565b5b5061110c565b5060208310610133831016604e8410600b84101617156110e25782820a9050838111156110dd576110dc610fb1565b5b61110c565b6110ef8484846001610fed565b9250905081840481111561110657611105610fb1565b5b81810290505b9392505050565b600061111e82610d90565b915061112983610d90565b92506111567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611040565b905092915050565b600061116982610d90565b915061117483610d90565b925082820261118281610d90565b9150828204841483151761119957611198610fb1565b5b5092915050565b6111a981610c28565b82525050565b60006060820190506111c460008301866111a0565b6111d160208301856111a0565b6111de6040830184610e30565b949350505050565b60006111f182610d90565b91506111fc83610d90565b925082820190508082111561121457611213610fb1565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611276602583610ce9565b91506112818261121a565b604082019050919050565b600060208201905081810360008301526112a581611269565b9050919050565b60006040820190506112c160008301856111a0565b6112ce6020830184610e30565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611331602483610ce9565b915061133c826112d5565b604082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006113c3602283610ce9565b91506113ce82611367565b604082019050919050565b600060208201905081810360008301526113f2816113b6565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061142f601f83610ce9565b915061143a826113f9565b602082019050919050565b6000602082019050818103600083015261145e81611422565b905091905056fea26469706673582212206668f300c72c7853b7f156178a129f40a3d37feccc0aea686fb32d026da9c98d64736f6c634300081b0033";

type ERC20TDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TD__factory extends ContractFactory {
  constructor(...args: ERC20TDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<
      ERC20TD & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20TD__factory {
    return super.connect(runner) as ERC20TD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TDInterface {
    return new Interface(_abi) as ERC20TDInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20TD {
    return new Contract(address, _abi, runner) as unknown as ERC20TD;
  }
}
